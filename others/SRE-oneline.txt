

SRE = Define Availability
	  Level of availability
	  plan in case of failure
	  
SLO : 
	Define (services level objectives) in collaboration with product owner. by agreeing these metrics in advance
	we make sure that there is a less of change of confusion and conflict in the feaute.
	SLO is just an agreement among stakeholders about how reliable service should be.

	Every application has unique set of requirement that dectate how the reliable does it has to be before customer no longer notice the difference.
	what is availability in the context of service?
	

SLI :
	are most often metrics over time such as 
	request latency, 
    throughput of request per second in case of a batch system.
	or 
	failure per total number of request
	  
	They are usually aggregated over time,and we typically apply a function like a percentile
	like a 99 percentile or a median
	And that way, we can get to a concrete threshold which we can define to say,
	is this single number good or bad?
	Binding the target for a collection of SLIs
	
	  
SLA : 
	Businees agreement between a customer and service provider typically based on SLOs
	What remediation you are going to take
	*** SLIs drive SLOs which inform SLAs
	penalty for failing to deliver services promoised
	
	
	
Basically the 95th percentile says that 95% of the time, the usage is below this amount. 
Conversely of course, 5% of the time, usage is above that amount. 
The 95th percentile is a good number to use for planning so you can ensure you have the needed bandwidth at least 95% of the time.


Percentiles : the value below which a percentage of data falls.
Example: You are the fourth tallest person in a group of 20
80% of people are shorter than you:
percentile 80%
That means you are at the 80th percentile.



SLO : 95th percentile homepage SLI will succeed 99.9% over trailing year
      SLOs are service level objectives

SLI : 95th percentile latency of homepage requests over past 5 minutes < 300ms
      SLIs are service level indicators or metrics over time,
      which inform about the health of a service
	  
AWS
	you can use CloudWatch alaram to be notified automatically whenever data reaches a level you define
		if CPU/Memory Utilization > 80%
			Alaram name : CPU/Memory-Utilization

AWS
	Create Auto Scaling Group
	add 2 more instances,if average CPU utilization > 80%, response to amazon cloud watch alarm



Error-Budget : 
	The error budget is how much time you're willing to allow your systems to be down, and 
	it depends heavily on the SLA that you've defined with the product team.

SRE metrics including 
SLI :
SLO :
SLA : 

reliability and availability

Latency (lag) is the delay between a user's action and a web application's response to that action, often referred to in networking terms as the total round trip time.
it takes for a data packet to travel.

low latency means small delay times, while a 
high latency means long delays.

throughput : can be defined as the total number of business transactions completed by the application in unit time (per second or per hour).

What are the ways to make a website scalable to handle million users?
	Load Balancer, Web Server, MySql/database, Caching Server
	
Site reliability engineering is more focused on operations and monitoring.
	
a site reliability engineer at New Relic, says it may be more helpful to think in terms of architecture style rather than tooling.

Containers and microservices play a significant role at New Relic, for instance, so Docker and container orchestration are integral parts of our SRE toolset. 
I think the biggest tool that SREs are using today is an orchestrator like Kubernetes or Mesosphere, 

New Relic that collect metrics from applications and infrastructure, some form of log or analytic data, and alert on that data via dashboards.
To receive mobile push notifications:
	Log in to your New Relic account via the mobile app at least once to ensure the device is registered.
	Add the user channel to the alert policy.
	Switch push notifications On for the device.

Position: Dev-Ops/SRE Consultant
Job Description:
- At least 6-9 years experience Information Technology with SDLC/Agile Software development and maintain software to improve the availability, scalability, latency, and efficiency of services
- Experience in one or more of programming languages/tools like Python, SQL scripting, VB.Net, or Spring, NodeJS
- Experience & Familiar in DevOps process with DevOps tools (Git, Jenkins, Nexus, SonarQube)
- Improvisation of application SLA with Code review, log analysis, batch scheduling & reports
- Expertise in Upgrade & enhance flows with SRE practices using automation for application, deployment and monitoring.
- Experience in managing system reliability, availability as part of customer journey with SRE metrics including SLI, SLO, SLA and error budget. Should be able to measure these metrics and tie them to business objectives - with the ultimate goal of providing value to your customers
- Exposure to Cloud Infra, AWS, OpenShift and Kubernetes is added advantage.
- Working experience on CI/CD pipeline for build, release and configuration management.
- System troubleshooting and problem solving across platform and application domains
- Reviewing & Suggesting improvements on application and batch processing, recommending & implementing process improvements
- Looking forward to work in dynamic change environment and have the positive attitude to learn and implement.
- Strong analytical, problem-solving and communication skills
- Work within an agile environment as part of a cross-functional collaborative team distributed across locations
Responsibilities:
- Reviewing, deploying, automating, maintaining and managing application, to ensure the availability, performance.
- Analyse on system reliability, availability as part of customer journey with SRE metrics including SLI, SLO, SLA and error budget, measure these metrics and tie them to business objectivesâ€”with the ultimate goal of providing value to your customers 
- Closing work with application team to review application SDLS process, log management and implement necessary improvements to obtain SRE factors, and create automation scripts for reports extractions
- To plan and execute configuration management, software performance analysis and system tuning
- Prepare and maintain release metrics, weekly and monthly reports.
 
 